{
    "project": {
        "name": "Avatar Wizard",
        "version": "0.1.0"
    },
    "files": {
        "js\\AvatarWizard.js": {
            "name": "js\\AvatarWizard.js",
            "modules": {},
            "classes": {
                "AvatarWizard": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "AvatarWizard": {
            "name": "AvatarWizard",
            "shortname": "AvatarWizard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js\\AvatarWizard.js",
            "line": 1,
            "description": "Manages the composition of a user avatar using predefined graphic parts. This\nclass requires jQuery.\n\nThe constructor needs to fetch a `settings.json` file through AJAX and its\nmethods may not be invoked until this has been done. The user-defined `ready`\ncallback is invoked by the `AvatarWizard` object when it is ready.\n\nThe `settings.json` file must have the following format:\n\n\t{\n\t\t\"canonicalWidth\": 123,\n\t\t\"canonicalHeight\": 456,\n\t\t\"path\": \"path/to/parts\",\n\t\t\"parts\": {\n\t\t\t\"category1\": [\n\t\t\t\t\"type1\",\n\t\t\t\t\"type2\",\n\t\t\t\t...\n\t\t\t],\n\t\t\t\"category2\": [\n\t\t\t\t\"type1\",\n\t\t\t\t\"type2\",\n\t\t\t\t...\n\t\t\t],\n\t\t\t\"category3\": [\n\t\t\t\t.\n\t\t\t\t.\n\t\t\t\t.\n\t\t\t],\n\t\t}\n\t}\n\n`canonicalWidth` and `canonicalHeight` are the dimensions of a rectangular\narea the coordinates in the js image files refer to. Modifying these\nparameters influences the size of the avatar relative to the destination\ncanvas.\n\n`path` is the path of the directory tree containing the js image files. The\ndirectory represented by `path` must contain one subdirectory for each\ncategory; each category directory must in turn contain one `.js` file for\neach part/type.\n\nFinally, \"parts\" is the set of registered parts and categories. The \"parts\"\nobject maps category names to part arrays (each key is a category name and\nits value is an array of part names).\n\nThe full path of a part is build as follows:\n\n\tpath/category/part.json\n\nwhich means that the \"path\" option is prepended, the category name follows,\nthe part name follows and the `.json` file extension is appended.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvas",
                    "description": "Mixed Specifies the HTML5 canvas where the avatar has to be\ndrawn. It can be specified as a HTMLCanvasElement object, string CSS selector\nor jQuery object."
                },
                {
                    "name": "ready",
                    "description": "Function A user-defined callback function invoked after the\n`AvatarWizard` object has read its configuration file and its ready to\nreceive method invocations."
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "js\\AvatarWizard.js",
            "line": 160,
            "description": "Recalculates the coordinate reference. This method must be invoked\nevery time the dimensions of the canvas change.\n\nThis method may be called in response to `resize` events at a high\nrate because the redraw rate is throttled down through\n`requestAnimationFrame`.",
            "itemtype": "method",
            "name": "resetDimensions",
            "chainable": 1,
            "class": "AvatarWizard"
        },
        {
            "file": "js\\AvatarWizard.js",
            "line": 179,
            "description": "Loads the avatar described by the specified JSON object and updates\nthe rendering on the canvas.\n\nThe specified object must have the following format:\n\n\t{\n\t\t\"category1\": \"type3\",\n\t\t\"category2\": {\n\t\t\t\"type\": \"type2\",\n\t\t\t\"color\": \"#abcdef\"\n\t\t},\n\t\t\"category3\": {\n\t\t\t\"type\": \"type1\",\n\t\t\t\"color\": \"rgb(12, 34, 56)\"\n\t\t},\n\t\t.\n\t\t.\n\t\t.\n\t}\n\nEach key must be a valid category name (one registered in the\n`settings.json` file, as documented in the\n{{#crossLink \"AvatarWizard\"}}AvatarWizard constructor{{/crossLink}})\nand its value can be either a string (a valid part/type name\nregistered for that category) or an object; in the latter case it\ncontains a mandatory `type` field specifying the part/type name and\nan optional `color` field specifying a CSS color for the part.\n\nNote that the specified JSON object is deep-copied, so subsequent\nmodifications to it do not have any effect on the avatar managed by\nthis object. To modify the managed avatar use the\n{{#crossLink \"AvatarWizard/select\"}}select{{/crossLink}} method.",
            "itemtype": "method",
            "name": "loadAvatar",
            "chainable": 1,
            "params": [
                {
                    "name": "newDescriptor",
                    "description": "Object A JSON object describing the avatar to\nload."
                }
            ],
            "class": "AvatarWizard"
        },
        {
            "file": "js\\AvatarWizard.js",
            "line": 224,
            "description": "Returns a JSON object that describes the current avatar as modified\nby {{#crossLink \"AvatarWizard/loadAvatar\"}}loadAvatar{{/crossLink}}\nand {{#crossLink \"AvatarWizard/select\"}}select{{/crossLink}} calls.\n\nSee {{#crossLink \"AvatarWizard/loadAvatar\"}}loadAvatar{{/crossLink}}\nfor information about the JSON format of avatar descriptors.\n\nThe returned object is a deep copy of the object mainatined\ninternally by the AvatarWizard instance.",
            "itemtype": "method",
            "name": "getAvatar",
            "return": {
                "description": "Object A JSON object that describes the current avatar."
            },
            "class": "AvatarWizard"
        },
        {
            "file": "js\\AvatarWizard.js",
            "line": 242,
            "description": "Selects the specified part for the specified category and updates the\nrendering of the avatar on the canvas.\n\nBoth the category and part/type names must be valid names registered\nin the `settings.json` file, as explained in the\n{{#crossLink \"AvatarWizard\"}}AvatarWizard constructor{{/crossLink}}.",
            "itemtype": "method",
            "name": "select",
            "chainable": 1,
            "params": [
                {
                    "name": "category",
                    "description": "String The category the part is being selected for."
                },
                {
                    "name": "type",
                    "description": "String The part name."
                }
            ],
            "example": [
                "\n\twizard.select('hair', 'blonde1');"
            ],
            "class": "AvatarWizard"
        },
        {
            "file": "js\\AvatarWizard.js",
            "line": 275,
            "description": "Returns the current color for the specified category.\n\nThis value can be set per-category with the\n{{#crossLink \"AvatarWizard/setColor\"}}setColor{{/crossLink}} method\nor in the avatar descriptor specified to the\n{{#crossLink \"AvatarWizard/loadAvatar\"}}loadAvatar{{/crossLink}}\nmethod.\n\nThe return value is undefined if no color has been set.",
            "itemtype": "method",
            "name": "getColor",
            "params": [
                {
                    "name": "category",
                    "description": "String The category to set the color for."
                }
            ],
            "return": {
                "description": "String The current CSS color for the specified category, or\n`undefined` if no color is set."
            },
            "class": "AvatarWizard"
        },
        {
            "file": "js\\AvatarWizard.js",
            "line": 299,
            "description": "TODO",
            "itemtype": "method",
            "name": "setColor",
            "chainable": 1,
            "params": [
                {
                    "name": "category",
                    "description": "String TODO"
                },
                {
                    "name": "color",
                    "description": "String TODO"
                }
            ],
            "class": "AvatarWizard"
        },
        {
            "file": "js\\AvatarWizard.js",
            "line": 328,
            "description": "TODO",
            "itemtype": "method",
            "name": "getThumbnail",
            "params": [
                {
                    "name": "width",
                    "description": "Number TODO"
                },
                {
                    "name": "height",
                    "description": "Number TODO"
                }
            ],
            "return": {
                "description": "HTMLElement TODO"
            },
            "class": "AvatarWizard"
        },
        {
            "file": "js\\AvatarWizard.js",
            "line": 338,
            "description": "TODO",
            "itemtype": "method",
            "name": "getEncodedThumbnail",
            "params": [
                {
                    "name": "width",
                    "description": "Number TODO"
                },
                {
                    "name": "height",
                    "description": "Number TODO"
                }
            ],
            "return": {
                "description": "String TODO"
            },
            "class": "AvatarWizard"
        }
    ],
    "warnings": []
}